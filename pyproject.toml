[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "maidr"
version = "1.7.3"
description = "Multimodal Access and Interactive Data Representations"
authors = [
    { name = "JooYoung Seo", email = "jseo1005@illinois.edu" },
    { name = "Saairam Venkatesh", email = "saairam2@illinois.edu" },
]
requires-python = ">=3.9"
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = [
    "accessibility",
    "visualization",
    "sonification",
    "braille",
    "tactile",
    "multimodal",
    "data representation",
    "blind",
    "low vision",
    "visual impairments",
]
classifiers = [
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "numpy>=1.26",
    "lxml>=5.1.0",
    "htmltools>=0.5",
    "wrapt>=1.16.0,<2",
    "mplfinance>=0.12.10b0",
]

[project.optional-dependencies]
visualization = [
    "matplotlib>=3.8",
    "seaborn>=0.12",
    "statsmodels>=0.14.4",
    "flask>=3.0.0"
]
jupyter = [
    "jupyter>=1.0.0,<2",
    "ipykernel>=6.0.0",
]
test = [
    "matplotlib>=3.8",
    "seaborn>=0.12",
    "jupyter>=1.0.0,<2",
    "pytest>=7.3.2,<8",
    "pytest-mock>=3.12.0,<4",
    "flask>=3.0.0"
]

[project.urls]
Homepage = "https://xability.github.io/py-maidr"
Repository = "https://github.com/xability/py-maidr"

[dependency-groups]
dev = [
    "ruff==0.3.4",
    "pre-commit>=3.3.2,<4",
    "pytest>=7.3.2,<8",
    "python-semantic-release==9.21.0",
    "pytest-mock>=3.12.0,<4",
    "tox>=4.13.0,<5",
    "quartodoc>=0.8.0,<0.9"
]

[tool.ruff]
line-length = 88

[tool.semantic_release]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = false
tag_format = "v{version}"
version_variables = ["maidr/__init__.py:__version__", "pyproject.toml:version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog.default_templates]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
  "^(?!feat: |feat\\(.*\\): |fix: |fix\\(.*\\): |docs: |docs\\(.*\\): |perf: |perf\\(.*\\): |refactor: |refactor\\(.*\\): |test: |test\\(.*\\): |build: |build\\(.*\\): |chore: |chore\\(.*\\): |ci: |ci\\(.*\\): |style: |style\\(.*\\): ).*"
]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["feat", "fix", "docs", "perf", "refactor", "style", "test", "build", "chore", "ci"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
